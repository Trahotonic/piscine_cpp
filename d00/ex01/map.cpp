//// Created by Roman Kyslyy on 5/27/18.//#include "Contact.class.hpp"static int  ft_is_invalid(std::string string){    if (string.compare("ADD") && string.compare("SEARCH") &&            string.compare("EXIT"))        return (1);    return (0);}int main(void){    Contact  *contact_list[8];    std::string         input;    std::string         buffer;    std::cout << "Enter command: ";    std::getline(std::cin, input);    if (std::cin.eof())    {        std::cout << "\nStandard input closed\nExit now\n";        return (1);    }    while (ft_is_invalid(input))    {        input.clear();        std::cout << "Please enter a valid command (ADD, SEARCH or EXIT): ";        std::getline(std::cin, input);        if (std::cin.eof())        {            std::cout << "\nStandard input closed\nExit now\n";            return (1);        }    }    while (input.compare("EXIT"))    {        if (!input.compare("ADD"))            addContact(contact_list);        if (!input.compare("SEARCH"))            displayContacts(contact_list);        std::cout << "Enter command: ";        std::cin >> input;        if (std::cin.eof())        {            std::cout << "\nStandard input closed\nExit now\n";            return (1);        }        while (ft_is_invalid(input))        {            input.clear();            std::cout << "Please enter a valid command (ADD, SEARCH or EXIT): ";            std::cin >> input;            if (std::cin.eof())            {                std::cout << "\nStandard input closed\nExit now\n";                return (1);            }        }    }    int n = 0;    while (n < Contact::getObjCount())        delete contact_list[n++];    std::cout << std::endl << "Erasing contacts\nExit now" << std::endl;    system ("leaks map");    return (0);}